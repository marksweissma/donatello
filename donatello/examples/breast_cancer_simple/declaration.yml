dataKwargs:
  etl: !!python/name:donatello.examples.breast_cancer_simple.declaration._load_sklearn_bc_dataset ''
  queries: {}
estimator: !!python/object:donatello.components.estimator.Estimator
  _declaration:
    gridKwargs: &id002 {cv: 5, scoring: f1}
    mlType: classification
    model: &id003 !!python/object:sklearn.linear_model.logistic.LogisticRegression {
      C: 1.0, _sklearn_version: 0.19.1, class_weight: null, dual: false, fit_intercept: true,
      intercept_scaling: 1, max_iter: 100, multi_class: ovr, n_jobs: 1, penalty: l2,
      random_state: null, solver: liblinear, tol: 0.0001, verbose: 0, warm_start: false}
    model__C: 1.0
    model__class_weight: null
    model__dual: false
    model__fit_intercept: true
    model__intercept_scaling: 1
    model__max_iter: 100
    model__multi_class: ovr
    model__n_jobs: 1
    model__penalty: l2
    model__random_state: null
    model__solver: liblinear
    model__tol: 0.0001
    model__verbose: 0
    model__warm_start: false
    paramGrid: &id004
      model__C:
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          exSuR+F6hD8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          xwgmUtMUkT8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          sCpEAVB+nD8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          8z/WxNLDpz8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          skGP5zbSsz8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          ALSeYiaIwD8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          sLPAzqaTyz8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          HFbZsxoA1z8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          H8gymPku4z8=
      - !!python/object/apply:numpy.core.multiarray.scalar
        - !!python/object/apply:numpy.dtype
          args: [f8, 0, 1]
          state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
        - !!binary |
          AAAAAAAA8D8=
    timeFormat: '%Y_%m_%d_%H_%M'
    transformer: &id005 !!python/object:donatello.utils.transformers.Selector
      reverse: true
      selectMethod: null
      selectValue: !!python/tuple []
    transformer__reverse: true
    transformer__selectMethod: null
    transformer__selectValue: !!python/tuple []
    typeDispatch: &id001
      classification: {method: predict_proba, score: score_first}
      regression: {method: predict, score: score_all}
  _initTime: '2018_11_26_01_47'
  _mlType: classification
  _typeDispatch: *id001
  gridKwargs: *id002
  model: *id003
  paramGrid: *id004
  timeFormat: '%Y_%m_%d_%H_%M'
  transformer: *id005
holdOut: true
metrics:
  ? !!python/name:sklearn.metrics.ranking.average_precision_score ''
  : !!python/object/apply:collections.defaultdict [&id006 !!python/name:__builtin__.dict '']
  ? !!python/name:sklearn.metrics.ranking.roc_auc_score ''
  : !!python/object/apply:collections.defaultdict [*id006]
  feature_weights: !!python/object/apply:collections.defaultdict
    args: [*id006]
    dictitems: {key: names, sort: coefficients}
  threshold_rates: !!python/object/apply:collections.defaultdict
    args: [*id006]
    dictitems: {key: thresholds, sort: thresholds}
mlType: classification
splitterKwargs: {target: is_malignant}
validation: true
